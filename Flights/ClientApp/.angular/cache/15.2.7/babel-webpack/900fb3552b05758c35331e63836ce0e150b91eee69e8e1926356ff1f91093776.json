{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function flightGet(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, flightGet.PATH, 'get');\n  if (params) {}\n  return http.request(rb.build({\n    responseType: 'json',\n    accept: 'text/json',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\nflightGet.PATH = '/Flight';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAOtD,OAAM,SAAUC,SAAS,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAAyB,EAAEC,OAAqB;EAC3G,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,SAAS,CAACM,IAAI,EAAE,KAAK,CAAC;EAC7D,IAAIH,MAAM,EAAE;EAGZ,OAAOF,IAAI,CAACM,OAAO,CACjBF,EAAE,CAACG,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,WAAW;IAAEN;EAAO,CAAE,CAAC,CACjE,CAACO,IAAI,CACJd,MAAM,CAAEe,CAAM,IAA6BA,CAAC,YAAYhB,YAAY,CAAC,EACrEE,GAAG,CAAEc,CAAoB,IAAI;IAC3B,OAAOA,CAAwC;EACjD,CAAC,CAAC,CACH;AACH;AAEAZ,SAAS,CAACM,IAAI,GAAG,SAAS","names":["HttpResponse","filter","map","RequestBuilder","flightGet","http","rootUrl","params","context","rb","PATH","request","build","responseType","accept","pipe","r"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Projects/Flights/Flights/ClientApp/src/app/api/fn/flight/flight-get.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FlightRm } from '../../models/flight-rm';\n\nexport interface FlightGet$Params {\n}\n\nexport function flightGet(http: HttpClient, rootUrl: string, params?: FlightGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<FlightRm>>> {\n  const rb = new RequestBuilder(rootUrl, flightGet.PATH, 'get');\n  if (params) {\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'text/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return r as StrictHttpResponse<Array<FlightRm>>;\n    })\n  );\n}\n\nflightGet.PATH = '/Flight';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}