{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet BookFlightComponent = class BookFlightComponent {\n  constructor(activatedRoute, flightService, router, authService, fb) {\n    this.activatedRoute = activatedRoute;\n    this.flightService = flightService;\n    this.router = router;\n    this.authService = authService;\n    this.fb = fb;\n    this.flightId = 'not loaded';\n    this.flight = {};\n    this.form = this.fb.group({\n      number: [1, Validators.required]\n    });\n    this.findFlight = flightId => {\n      this.flightId = flightId ?? 'not passed';\n      this.flightService.findFlight({\n        id: this.flightId\n      }).subscribe(flight => this.flight = flight, this.handleError);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Flight not found!\");\n        //this.router.navigate(['/search-flights']);\n      }\n      //this.router.navigate(['/search-flights']);\n      console.log(\"Response error. Status: \", err.status);\n      console.log(\"Response error. StatusText: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    if (this.authService.currentUser == null) {\n      this.router.navigate(['/register-passenger']);\n    }\n    this.activatedRoute.paramMap.subscribe(p => this.findFlight(p.get('flightId')));\n  }\n  book() {\n    if (this.form.invalid) {\n      return;\n    }\n    console.log(\"booking\", this.form.get('number')?.value, \" passengers for the flight: \", this.flight.id);\n    const booking = {\n      flightId: this.flight.id,\n      passengerEmail: this.authService.currentUser?.email,\n      numberOfSeats: this.form.get('number')?.value\n    };\n    this.flightService.bookFlight({\n      body: booking\n    }).subscribe(_ => this.router.navigate(['/my-booking']), this.handleError);\n  }\n};\nBookFlightComponent = __decorate([Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})], BookFlightComponent);\nexport { BookFlightComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAKjD,SAAsBC,UAAU,QAAQ,gBAAgB;AAOjD,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAS9BC,YAAoBC,cAA8B,EACxCC,aAA4B,EAC5BC,MAAc,EACdC,WAAwB,EACxBC,EAAe;IAJL,mBAAc,GAAdJ,cAAc;IACxB,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,OAAE,GAAFC,EAAE;IAXZ,aAAQ,GAAW,YAAY;IAC/B,WAAM,GAAa,EAAE;IAErB,SAAI,GAAG,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC;MACnBC,MAAM,EAAE,CAAC,CAAC,EAAET,UAAU,CAACU,QAAQ;KAChC,CAAC;IAiBM,eAAU,GAAIC,QAAuB,IAAI;MAC/C,IAAI,CAACA,QAAQ,GAAGA,QAAQ,IAAI,YAAY;MACxC,IAAI,CAACP,aAAa,CAACQ,UAAU,CAAC;QAAEC,EAAE,EAAE,IAAI,CAACF;MAAQ,CAAE,CAAC,CACjDG,SAAS,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,EACvC,IAAI,CAACC,WAAW,CACjB;IACL,CAAC;IAEO,gBAAW,GAAIC,GAAQ,IAAI;MACjC,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBC,KAAK,CAAC,mBAAmB,CAAC;QAC1B;;MAEF;MACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,GAAG,CAACC,MAAM,CAAC;MACnDE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEJ,GAAG,CAACK,UAAU,CAAC;MAC3DF,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;IAClB,CAAC;EA5B4B;EAE7BM,QAAQ;IAEN,IAAI,IAAI,CAACjB,WAAW,CAACkB,WAAW,IAAI,IAAI,EAAE;MACxC,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;;IAE/C,IAAI,CAACtB,cAAc,CAACuB,QAAQ,CACzBZ,SAAS,CAACa,CAAC,IAAI,IAAI,CAACf,UAAU,CAACe,CAAC,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;EACvD;EAqBAC,IAAI;IAEF,IAAI,IAAI,CAACC,IAAI,CAACC,OAAO,EAAE;MACrB;;IAGFX,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACS,IAAI,CAACF,GAAG,CAAC,QAAQ,CAAC,EAAEI,KAAM,EACpD,8BAA8B,EAAE,IAAI,CAACjB,MAAM,CAACF,EAAE,CAAC;IAEjD,MAAMoB,OAAO,GAAY;MACvBtB,QAAQ,EAAE,IAAI,CAACI,MAAM,CAACF,EAAE;MACxBqB,cAAc,EAAE,IAAI,CAAC5B,WAAW,CAACkB,WAAW,EAAEW,KAAM;MACpDC,aAAa,EAAE,IAAI,CAACN,IAAI,CAACF,GAAG,CAAC,QAAQ,CAAC,EAAEI;KACzC;IAED,IAAI,CAAC5B,aAAa,CAACiC,UAAU,CAAC;MAAEC,IAAI,EAAEL;IAAO,CAAE,CAAC,CAC7CnB,SAAS,CAACyB,CAAC,IAAI,IAAI,CAAClC,MAAM,CAACoB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAACT,WAAW,CAAC;EAC5E;CAED;AA9DYf,mBAAmB,eAL/BF,SAAS,CAAC;EACTyC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWzC,mBAAmB,CA8D/B;SA9DYA,mBAAmB","names":["Component","Validators","BookFlightComponent","constructor","activatedRoute","flightService","router","authService","fb","group","number","required","flightId","findFlight","id","subscribe","flight","handleError","err","status","alert","console","log","statusText","ngOnInit","currentUser","navigate","paramMap","p","get","book","form","invalid","value","booking","passengerEmail","email","numberOfSeats","bookFlight","body","_","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Projects/Flights/Flights/ClientApp/src/app/book-flight/book-flight.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlightService } from './../api/services/flight.service';\nimport { BookDto, FlightRm } from '../api/models';\nimport { AuthService } from '../auth/auth.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})\nexport class BookFlightComponent implements OnInit{\n\n  flightId: string = 'not loaded';\n  flight: FlightRm = {}\n\n  form = this.fb.group({\n    number: [1, Validators.required]\n  })\n\n  constructor(private activatedRoute: ActivatedRoute,\n    private flightService: FlightService,\n    private router: Router,\n    private authService: AuthService,\n    private fb: FormBuilder) { }\n\n  ngOnInit() {\n\n    if (this.authService.currentUser == null) {\n      this.router.navigate(['/register-passenger']);\n    }\n    this.activatedRoute.paramMap\n      .subscribe(p => this.findFlight(p.get('flightId')));\n  }\n\n  private findFlight = (flightId: string | null) => {\n    this.flightId = flightId ?? 'not passed';\n    this.flightService.findFlight({ id: this.flightId })\n      .subscribe(flight => this.flight = flight,\n        this.handleError\n      );\n  }\n\n  private handleError = (err: any) => {\n    if (err.status == 404) {\n      alert(\"Flight not found!\");\n      //this.router.navigate(['/search-flights']);\n    }\n    //this.router.navigate(['/search-flights']);\n    console.log(\"Response error. Status: \", err.status);\n    console.log(\"Response error. StatusText: \", err.statusText);\n    console.log(err);\n  }\n\n  book() {\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    console.log(\"booking\", this.form.get('number')?.value!,\n      \" passengers for the flight: \", this.flight.id);\n\n    const booking: BookDto = {\n      flightId: this.flight.id,\n      passengerEmail: this.authService.currentUser?.email!,\n      numberOfSeats: this.form.get('number')?.value!\n    }\n\n    this.flightService.bookFlight({ body: booking })\n      .subscribe(_ => this.router.navigate(['/my-booking']), this.handleError);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}