{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function cancelBooking(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, cancelBooking.PATH, 'delete');\n  if (params) {\n    rb.query('FlightId', params.FlightId, {});\n    rb.query('PassengerEmail', params.PassengerEmail, {});\n    rb.query('NumberOfSeats', params.NumberOfSeats, {});\n  }\n  return http.request(rb.build({\n    responseType: 'text',\n    accept: '*/*',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r.clone({\n      body: undefined\n    });\n  }));\n}\ncancelBooking.PATH = '/Booking';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAStD,OAAM,SAAUC,aAAa,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAA6B,EAAEC,OAAqB;EACnH,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,aAAa,CAACM,IAAI,EAAE,QAAQ,CAAC;EACpE,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,KAAK,CAAC,UAAU,EAAEJ,MAAM,CAACK,QAAQ,EAAE,EAAE,CAAC;IACzCH,EAAE,CAACE,KAAK,CAAC,gBAAgB,EAAEJ,MAAM,CAACM,cAAc,EAAE,EAAE,CAAC;IACrDJ,EAAE,CAACE,KAAK,CAAC,eAAe,EAAEJ,MAAM,CAACO,aAAa,EAAE,EAAE,CAAC;;EAGrD,OAAOT,IAAI,CAACU,OAAO,CACjBN,EAAE,CAACO,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,KAAK;IAAEV;EAAO,CAAE,CAAC,CAC3D,CAACW,IAAI,CACJlB,MAAM,CAAEmB,CAAM,IAA6BA,CAAC,YAAYpB,YAAY,CAAC,EACrEE,GAAG,CAAEkB,CAAoB,IAAI;IAC3B,OAAQA,CAAuB,CAACC,KAAK,CAAC;MAAEC,IAAI,EAAEC;IAAS,CAAE,CAA6B;EACxF,CAAC,CAAC,CACH;AACH;AAEAnB,aAAa,CAACM,IAAI,GAAG,UAAU","names":["HttpResponse","filter","map","RequestBuilder","cancelBooking","http","rootUrl","params","context","rb","PATH","query","FlightId","PassengerEmail","NumberOfSeats","request","build","responseType","accept","pipe","r","clone","body","undefined"],"sourceRoot":"","sources":["/Users/beyzaerdogan/Projects/Flights/Flights/ClientApp/src/app/api/fn/booking/cancel-booking.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\n\nexport interface CancelBooking$Params {\n  FlightId?: string;\n  PassengerEmail?: string;\n  NumberOfSeats?: number;\n}\n\nexport function cancelBooking(http: HttpClient, rootUrl: string, params?: CancelBooking$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {\n  const rb = new RequestBuilder(rootUrl, cancelBooking.PATH, 'delete');\n  if (params) {\n    rb.query('FlightId', params.FlightId, {});\n    rb.query('PassengerEmail', params.PassengerEmail, {});\n    rb.query('NumberOfSeats', params.NumberOfSeats, {});\n  }\n\n  return http.request(\n    rb.build({ responseType: 'text', accept: '*/*', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\n    map((r: HttpResponse<any>) => {\n      return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>;\n    })\n  );\n}\n\ncancelBooking.PATH = '/Booking';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}